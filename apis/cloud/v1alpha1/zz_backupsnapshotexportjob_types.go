/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupSnapshotExportJobObservation struct {
	Components []ComponentsObservation `json:"components,omitempty" tf:"components,omitempty"`

	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	ErrMsg *string `json:"errMsg,omitempty" tf:"err_msg,omitempty"`

	ExportJobID *string `json:"exportJobId,omitempty" tf:"export_job_id,omitempty"`

	ExportStatusExportedCollections *float64 `json:"exportStatusExportedCollections,omitempty" tf:"export_status_exported_collections,omitempty"`

	ExportStatusTotalCollections *float64 `json:"exportStatusTotalCollections,omitempty" tf:"export_status_total_collections,omitempty"`

	FinishedAt *string `json:"finishedAt,omitempty" tf:"finished_at,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type BackupSnapshotExportJobParameters struct {

	// +kubebuilder:validation:Required
	ClusterName *string `json:"clusterName" tf:"cluster_name,omitempty"`

	// +kubebuilder:validation:Required
	CustomData []CustomDataParameters `json:"customData" tf:"custom_data,omitempty"`

	// +kubebuilder:validation:Required
	ExportBucketID *string `json:"exportBucketId" tf:"export_bucket_id,omitempty"`

	// +kubebuilder:validation:Required
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`

	// +kubebuilder:validation:Required
	SnapshotID *string `json:"snapshotId" tf:"snapshot_id,omitempty"`
}

type ComponentsObservation struct {
}

type ComponentsParameters struct {

	// +kubebuilder:validation:Required
	ExportID *string `json:"exportId" tf:"export_id,omitempty"`

	// +kubebuilder:validation:Required
	ReplicaSetName *string `json:"replicaSetName" tf:"replica_set_name,omitempty"`
}

type CustomDataObservation struct {
}

type CustomDataParameters struct {

	// +kubebuilder:validation:Required
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

// BackupSnapshotExportJobSpec defines the desired state of BackupSnapshotExportJob
type BackupSnapshotExportJobSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BackupSnapshotExportJobParameters `json:"forProvider"`
}

// BackupSnapshotExportJobStatus defines the observed state of BackupSnapshotExportJob.
type BackupSnapshotExportJobStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupSnapshotExportJobObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// BackupSnapshotExportJob is the Schema for the BackupSnapshotExportJobs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,mongodbajet}
type BackupSnapshotExportJob struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BackupSnapshotExportJobSpec   `json:"spec"`
	Status            BackupSnapshotExportJobStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupSnapshotExportJobList contains a list of BackupSnapshotExportJobs
type BackupSnapshotExportJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupSnapshotExportJob `json:"items"`
}

// Repository type metadata.
var (
	BackupSnapshotExportJob_Kind             = "BackupSnapshotExportJob"
	BackupSnapshotExportJob_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupSnapshotExportJob_Kind}.String()
	BackupSnapshotExportJob_KindAPIVersion   = BackupSnapshotExportJob_Kind + "." + CRDGroupVersion.String()
	BackupSnapshotExportJob_GroupVersionKind = CRDGroupVersion.WithKind(BackupSnapshotExportJob_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupSnapshotExportJob{}, &BackupSnapshotExportJobList{})
}
